#!/usr/bin/env php
<?php

// Usage: ./bin/scan-examples [<input-dir> <output-dir>]

namespace Civi\SmartyClassifier;

use Symfony\Component\Finder\Finder;

require_once dirname(__DIR__) . '/vendor/autoload.php';

function parseArgs(array $argv): array {
  $prog = array_shift($argv);

  if (!empty($argv)) {
    return [rtrim($argv[0], '/'), rtrim($argv[1], '/')];
  }
  else {
    $prj = dirname(__DIR__);
    $files = glob("$prj/examples/*.tpl");
    return ["$prj/examples/input", "$prj/examples/output"];
  }

  return [$inDir, $outDir];
}

function processDir(string $inputBaseDir, string $outputBaseDir): void {
  $files = (new Finder)->in($inputBaseDir)->files()->name('*.tpl');

  $topParser = Services::createTopParser();
  $tagParser = Services::createTagParser();
  foreach ($files as $fileObj) {
    /** @var \SplFileInfo $fileObj */
    $inputFile = (string) $fileObj;
    $relativeFile = substr($inputFile, strlen($inputBaseDir) + 1);
    $outputDir = $outputBaseDir . '/' . $relativeFile . '.d';

    printf("Process %s => %s\n", $inputFile, $outputDir);
    // echo '.';

    try {
      $parsed = $topParser->parse(file_get_contents($inputFile));
    }
    catch (\Throwable $t) {
      fwrite(STDERR,  "\nERROR ($inputFile): " . $t->getMessage() . "\n\n");
      continue;
    }

    Files::mkdir($outputDir);

    foreach (Reports::getReportList() as $name) {
      Reports::writeFile($outputDir . '/' . "$name.txt", $name, $parsed);
    }

    Files::remove($outputDir . '/tag-*.tpl');
    Files::remove($outputDir . '/tag-*.tree');
    foreach ($parsed->findAll('stanza:tag') as $tag) {
      $string = (string) $tag;
      $id = md5($string);
      $parsedTag = $tagParser->parse($string);
      file_put_contents("$outputDir/tag-$id.tpl", $tag);
      Reports::writeFile("$outputDir/tag-$id.tree", 'tree', $parsedTag);
    }
  }

  echo "\n";
}

[$inDir, $outDir] = parseArgs($argv);
processDir($inDir, $outDir);